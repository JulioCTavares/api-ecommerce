{
  "openapi": "3.0.1",
  "info": {
    "title": "E-commerce API",
    "description": "Documentation API E-commerce",
    "version": "1.0.0",
    "contact": {
      "email": "support@email.com"
    }
  },
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create User",
        "description": "This route allow to create a new User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createUsers"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/createUsersResult"
                }
              }
            }
          },
          "401": {
            "description": "User already exists"
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List all existing users",
        "description": "This route allow find all users",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/listUsersResult"
                }
              }
            }
          },
          "401": {
            "description": "Missing JWT Token / Invalid Token"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Show a user by id",
        "description": "This route allow to get a user per request",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID you want to search",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/showUsersByIdResult"
                }
              }
            }
          },
          "401": {
            "description": "Missing JWT Token / Invalid Token"
          },
          "404": {
            "description": "User does not found"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update a user email by id",
        "description": "This route allow to update a user's email per request",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID you want to search",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateUsers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/updateUsersResult"
                }
              }
            }
          },
          "401": {
            "description": "Missing JWT Token / Invalid Token"
          },
          "404": {
            "description": "User does not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a user by id",
        "description": "This route allow to delete a user per request",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID you want to search",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Missing JWT Token / Invalid Token"
          },
          "404": {
            "description": "User does not found"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Login User",
        "description": "This route allow a User login in the system",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginUsers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/loginUsersResult"
                }
              }
            }
          },
          "401": {
            "description": "Email or password incorrect"
          }
        }
      }
    },
    "/clients": {
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Create Client",
        "description": "This route allow to create a new Client",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createClients"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/createClientsResult"
                }
              }
            }
          },
          "401": {
            "description": "Client Already Exists / Client Name Already Exists"
          }
        }
      },
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "List all existing clients",
        "description": "This route allow find all clients",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/listClientsResult"
                }
              }
            }
          },
          "401": {
            "description": "Missing JWT Token / Invalid Token"
          }
        }
      }
    },
    "/clients/{id}": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Show a Client by id",
        "description": "This route allow to get a Client per request",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client ID you want to search",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/showClientsByIdResult"
                }
              }
            }
          },
          "401": {
            "description": "Missing JWT Token / Invalid Token"
          },
          "404": {
            "description": "Client does not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Clients"
        ],
        "summary": "Delete a client by id",
        "description": "This route allow to delete a client per request",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client ID you want to search",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Missing JWT Token / Invalid Token"
          },
          "404": {
            "description": "Client does not found"
          }
        }
      }
    },
    "/clients/login": {
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Login Client",
        "description": "This route allow a Client login in the system",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginClients"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/loginClientsResult"
                }
              }
            }
          },
          "401": {
            "description": "Email or password incorrect"
          }
        }
      }
    },
    "/products": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create Product",
        "description": "This route allow to create a new Product",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createProducts"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/createProductsResult"
                }
              }
            }
          },
          "401": {
            "description": "Missing JWT Token / Invalid Token"
          }
        }
      },
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "List all existing products",
        "description": "This route allow find all products",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/listProductsResult"
                }
              }
            }
          },
          "401": {
            "description": "Missing JWT Token / Invalid Token"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Show a product by id",
        "description": "This route allow to get a product per request",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID you want to search",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/showProductByIdResult"
                }
              }
            }
          },
          "401": {
            "description": "Missing JWT Token / Invalid Token"
          },
          "404": {
            "description": "Product does not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a Product by id",
        "description": "This route allow to delete a product per request",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID you want to search",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Missing JWT Token / Invalid Token"
          },
          "404": {
            "description": "User does not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "createUsers": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "updateUsers": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "loginUsers": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "createClients": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password",
          "phone",
          "address"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "address": {
            "type": "string"
          }
        }
      },
      "loginClients": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "createProducts": {
        "type": "multipart form",
        "required": [
          "name",
          "price",
          "image"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "image": {
            "type": "file"
          }
        }
      }
    }
  },
  "definitions": {
    "createUsersResult": {
      "example": {
        "success": true,
        "user": {
          "id": "651bc35e-163e-46c7-a309-74de0ad31714",
          "email": "userexample@email.com",
          "created_at": "2022-06-16T14:03:26.415Z",
          "updated_at": "2022-06-16T14:03:26.416Z"
        }
      }
    },
    "listUsersResult": {
      "example": {
        "success": true,
        "AllUsers": [
          {
            "id": "651bc35e-163e-46c7-a309-74de0ad31714",
            "email": "userexample@email.com",
            "created_at": "2022-06-16T14:03:26.415Z",
            "updated_at": "2022-06-16T14:03:26.416Z"
          }
        ]
      }
    },
    "showUsersByIdResult": {
      "example": {
        "success": true,
        "user": {
          "id": "651bc35e-163e-46c7-a309-74de0ad31714",
          "email": "userexample@email.com",
          "created_at": "2022-06-16T14:03:26.415Z",
          "updated_at": "2022-06-16T14:03:26.416Z"
        }
      }
    },
    "updateUsersResult": {
      "example": {
        "success": true,
        "user": {
          "id": "651bc35e-163e-46c7-a309-74de0ad31714",
          "email": "userexample2@email.com",
          "created_at": "2022-06-16T14:03:26.415Z",
          "updated_at": "2022-06-16T14:03:26.416Z"
        }
      }
    },
    "loginUsersResult": {
      "success": true,
      "user": {
        "id": "651bc35e-163e-46c7-a309-74de0ad31714",
        "email": "userexample@email.com",
        "created_at": "2022-06-16T14:03:26.415Z",
        "updated_at": "2022-06-16T14:03:26.416Z"
      },
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NTUzOTE3NjUsImV4cCI6MTY1NTQ3ODE2NSwic3ViIjoiNjUxYmMzNWUtMTYzZS00NmM3LWEzMDktNzRkZTBhZDMxNzE0In0.M9r_R4lYDdMCVyh084l2KHPTW8X_4uJkJUS67weHGp4"
    },
    "createClientsResult": {
      "success": true,
      "client": {
        "id": "2091dabf-2a5d-4221-a4b2-b2d8aa18b03e",
        "name": "Client Example",
        "email": "clientexample@email.com",
        "phone": "81994999994",
        "address": "Rua X",
        "created_at": "2022-06-16T17:45:46.545Z",
        "updated_at": "2022-06-16T17:45:46.543Z"
      }
    },
    "listClientsResult": {
      "success": true,
      "allClients": [
        {
          "id": "2091dabf-2a5d-4221-a4b2-b2d8aa18b03e",
          "name": "Client Example",
          "email": "clientexample@email.com",
          "phone": "81994999994",
          "address": "Rua X",
          "created_at": "2022-06-16T17:45:46.545Z",
          "updated_at": "2022-06-16T17:45:46.543Z"
        }
      ]
    },
    "showClientsByIdResult": {
      "success": true,
      "client": {
        "id": "2091dabf-2a5d-4221-a4b2-b2d8aa18b03e",
        "name": "Client Example",
        "email": "clientexample@email.com",
        "phone": "81994999994",
        "address": "Rua X",
        "created_at": "2022-06-16T17:45:46.545Z",
        "updated_at": "2022-06-16T17:45:46.543Z"
      }
    },
    "loginClientsResult": {
      "success": true,
      "client": {
        "id": "2091dabf-2a5d-4221-a4b2-b2d8aa18b03e",
        "name": "Client Example",
        "email": "clientexample@email.com",
        "phone": "81994999994",
        "address": "Rua X",
        "created_at": "2022-06-16T17:45:46.545Z",
        "updated_at": "2022-06-16T17:45:46.543Z"
      },
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NTU0MDI3MzUsImV4cCI6MTY1NTQ4OTEzNSwic3ViIjoiMjA5MWRhYmYtMmE1ZC00MjIxLWE0YjItYjJkOGFhMThiMDNlIn0.A1PEucb7hhGjPGcxTHVMx1x5vMsTNDs1go8SGRkxaI8"
    },
    "createProductsResult": {
      "sucess": true,
      "product": {
        "id": "f75d2886-df2f-45c0-8871-104d2fae3cc8",
        "name": "tenis nike air jordan ",
        "price": 5000,
        "code": 7586,
        "image": "82327eb80766f48687188b302a9c482c-tenis-jordan.jpg",
        "created_at": "2022-06-15T03:21:40.824Z",
        "updated_at": "2022-06-15T03:21:40.821Z"
      }
    },
    "listProductsResult": {
      "success": true,
      "products": [
        {
          "id": "f75d2886-df2f-45c0-8871-104d2fae3cc8",
          "name": "tenis nike air jordan ",
          "price": 5000,
          "code": 7586,
          "image": "82327eb80766f48687188b302a9c482c-tenis-jordan.jpg",
          "created_at": "2022-06-15T03:21:40.824Z",
          "updated_at": "2022-06-15T03:21:40.821Z"
        }
      ]
    },
    "showProductByIdResult": {
      "success": true,
      "product": {
        "id": "f75d2886-df2f-45c0-8871-104d2fae3cc8",
        "name": "tenis nike air jordan ",
        "price": 5000,
        "code": 7586,
        "image": "82327eb80766f48687188b302a9c482c-tenis-jordan.jpg",
        "created_at": "2022-06-15T03:21:40.824Z",
        "updated_at": "2022-06-15T03:21:40.821Z"
      }
    }
  },
  "securitySchemes": {
    "Bearer": {
      "type": "http",
      "scheme": "bearer",
      "bearerFormat": "JWT"
    }
  }
}